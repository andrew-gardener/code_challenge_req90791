name: deploy

on:
  push:
    branches:
      - master

jobs:
  frontend_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: yarn
        cache-dependency-path: '**/yarn.lock'
    - name: Install dependencies
      working-directory: frontend
      run: yarn install --frozen-lockfile --immutable
    # - name: Run tests
    #   working-directory: frontend
    #   run: yarn test:unit

  deploy_frontend:
    needs: [ 'frontend_tests', 'backend_tests' ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: yarn
        cache-dependency-path: '**/yarn.lock'
    - name: Install dependencies
      working-directory: frontend
      run: yarn install --frozen-lockfile --immutable
    - name: Build dist
      working-directory: frontend
      run: yarn build
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend/dist
        cname: req90791.andrewgardener.com

  backend_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_DB: code_challenge_req90791
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 15432:5432
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    - name: Install dependencies
      working-directory: backend
      run: pip install -r requirements.txt
    - name: Run tests
      working-directory: backend
      env:
        POSTGRES_HOST: 127.0.0.1
        POSTGRES_PORT: 15432
        POSTGRES_NAME: code_challenge_req90791
        POSTGRES_USER: root
        POSTGRES_PASSWORD: password
        ALLOWED_HOSTS: localhost
        CORS_ALLOWED_ORIGINS: http://localhost:8080
        SECRET_KEY: django-insecure-hgnk_w#2j!sd$$3vapnfm6)a=pz9gdqr%cz@qvow$$l5=85jllh4
      run: ./manage.py test

  deploy_backend:
    needs: [ 'frontend_tests', 'backend_tests' ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: gonuit/heroku-docker-deploy@v1.3.3
      with:
        heroku_app_name: code-challenge-req90791
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        email: ${{secrets.HEROKU_EMAIL}}
        dockerfile_directory: ./backend